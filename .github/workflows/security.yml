name: Security & Dependency Checks

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run npm audit
      run: npm audit --audit-level moderate
      
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=medium
        
    - name: Upload Snyk results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: snyk.sarif

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Dependency Review
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: moderate

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        language: [ 'javascript', 'typescript' ]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  outdated-dependencies:
    name: Check Outdated Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Check for outdated dependencies
      run: |
        echo "ðŸ“¦ Checking for outdated dependencies..."
        npm outdated || true
        
    - name: Create issue for outdated dependencies
      if: github.event_name == 'schedule'
      uses: actions/github-script@v7
      with:
        script: |
          const { execSync } = require('child_process');
          
          try {
            const outdated = execSync('npm outdated --json', { encoding: 'utf8' });
            const outdatedPackages = JSON.parse(outdated);
            
            if (Object.keys(outdatedPackages).length > 0) {
              const body = `## ðŸ“¦ Outdated Dependencies Report
              
              The following dependencies are outdated:
              
              | Package | Current | Wanted | Latest |
              |---------|---------|---------|---------|
              ${Object.entries(outdatedPackages).map(([pkg, info]) => 
                `| ${pkg} | ${info.current} | ${info.wanted} | ${info.latest} |`
              ).join('\n')}
              
              Consider updating these dependencies to their latest versions.
              
              _This issue was automatically created by the security workflow._`;
              
              github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'ðŸ“¦ Outdated Dependencies Found',
                body: body,
                labels: ['dependencies', 'maintenance']
              });
            }
          } catch (error) {
            console.log('No outdated dependencies found or error occurred:', error.message);
          }
