name: CI Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  lint:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Check TypeScript types
      run: npx tsc --noEmit

  nextjs-build:
    name: Build Next.js Application
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build Next.js application
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nextjs-build-${{ matrix.node-version }}
        path: .next/
        retention-days: 1

  test:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [lint, nextjs-build]
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: nextjs-build-${{ matrix.node-version }}
        path: .next/
        
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
      
    - name: Start application
      run: npm start &
      
    - name: Wait for application
      run: npx wait-on http://localhost:3000 --timeout 60000
      
    - name: Run Playwright tests
      run: npm run test:e2e
      
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-node-${{ matrix.node-version }}
        path: playwright-report/
        retention-days: 7

  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: [lint, nextjs-build, test]
    if: always()
    
    steps:
    - name: Check job results
      run: |
        if [[ "${{ needs.lint.result }}" != "success" || "${{ needs.nextjs-build.result }}" != "success" || "${{ needs.test.result }}" != "success" ]]; then
          echo "❌ Quality gate failed - one or more jobs failed"
          exit 1
        else
          echo "✅ Quality gate passed - all jobs succeeded"
        fi
